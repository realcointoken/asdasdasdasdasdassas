/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IKeep3rV2,
  IKeep3rV2Interface,
} from "../../../../../../contracts/core/connext/helpers/RelayerProxy.sol/IKeep3rV2";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_keeper",
        type: "address",
      },
    ],
    name: "isKeeper",
    outputs: [
      {
        internalType: "bool",
        name: "_isKeeper",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_keeper",
        type: "address",
      },
    ],
    name: "worked",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IKeep3rV2__factory {
  static readonly abi = _abi;
  static createInterface(): IKeep3rV2Interface {
    return new utils.Interface(_abi) as IKeep3rV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IKeep3rV2 {
    return new Contract(address, _abi, signerOrProvider) as IKeep3rV2;
  }
}
