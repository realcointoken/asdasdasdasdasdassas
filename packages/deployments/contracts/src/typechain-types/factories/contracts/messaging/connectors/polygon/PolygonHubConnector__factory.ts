/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  PolygonHubConnector,
  PolygonHubConnectorInterface,
} from "../../../../../contracts/messaging/connectors/polygon/PolygonHubConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "address",
        name: "_checkPointManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Connector__processMessage_notUsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__ownershipDelayElapsed_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SEND_MESSAGE_EVENT_SIG",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "checkpointManager",
    outputs: [
      {
        internalType: "contract ICheckpointManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fxChildTunnel",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fxRoot",
    outputs: [
      {
        internalType: "contract IFxStateSender",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "processedExits",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "inputData",
        type: "bytes",
      },
    ],
    name: "receiveMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6101006040523480156200001257600080fd5b5060405162002b3b38038062002b3b83398101604081905262000035916200036e565b8084878782878784848484846200004c33620001ba565b8463ffffffff16600003620000975760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038216620000e35760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b60448201526064016200008e565b63ffffffff8086166080526001600160a01b0380851660a05283811660c05290851660e0528116156200011b576200011b816200021f565b604080516001600160a01b0385811682528481166020830152831681830152905163ffffffff86811692908816917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a35050600580546001600160a01b039b8c166001600160a01b031991821617909155600480549a909b1699169890981790985550620003ef9c50505050505050505050505050565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b62000235816200024360201b620008311760201c565b6200024081620002ac565b50565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b6006546001600160a01b0316156200031a5760405162461bcd60e51b815260206004820152602a60248201527f467842617365526f6f7454756e6e656c3a204348494c445f54554e4e454c5f4160448201526913149150511657d4d15560b21b60648201526084016200008e565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b805163ffffffff811681146200035157600080fd5b919050565b80516001600160a01b03811681146200035157600080fd5b60008060008060008060c087890312156200038857600080fd5b62000393876200033c565b9550620003a3602088016200033c565b9450620003b36040880162000356565b9350620003c36060880162000356565b9250620003d36080880162000356565b9150620003e360a0880162000356565b90509295509295509295565b60805160a05160c05160e0516126f662000445600039600081816101a90152610d11015260008181610290015281816104c40152610cea01526000818161043701526105790152600061023c01526126f66000f3fe6080604052600436106101445760003560e01c80638da5cb5b116100b6578063d1851c921161006f578063d1851c92146103e8578063d232c22014610406578063d69f9d6114610425578063db1b765914610459578063de9b771f14610479578063f953cec71461049957600080fd5b80638da5cb5b14610335578063972c492814610353578063b1f8100d14610373578063c0857ba014610393578063c5b350df146103b3578063cc394283146103c857600080fd5b806352a9674b1161010857806352a9674b1461022a5780635bd11efc1461025e5780635f61e3ec1461027e578063607f2d42146102ca5780636a42b8f81461030a578063715018a61461032057600080fd5b80630e387de61461015057806314168416146101975780633cf52ffb146101e057806348e6fa23146101f55780634ff746f61461020a57600080fd5b3661014b57005b600080fd5b34801561015c57600080fd5b506101847f8c5261668696ce22758910d05bab8f186d6eb247ceac2af2e82c7dc17669b03681565b6040519081526020015b60405180910390f35b3480156101a357600080fd5b506101cb7f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff909116815260200161018e565b3480156101ec57600080fd5b50600254610184565b6102086102033660046121de565b6104b9565b005b34801561021657600080fd5b50610208610225366004612242565b61056e565b34801561023657600080fd5b506101cb7f000000000000000000000000000000000000000000000000000000000000000081565b34801561026a57600080fd5b5061020861027936600461228c565b610614565b34801561028a57600080fd5b506102b27f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161018e565b3480156102d657600080fd5b506102fa6102e53660046122a9565b60076020526000908152604090205460ff1681565b604051901515815260200161018e565b34801561031657600080fd5b5062093a80610184565b34801561032c57600080fd5b5061020861064b565b34801561034157600080fd5b506000546001600160a01b03166102b2565b34801561035f57600080fd5b506006546102b2906001600160a01b031681565b34801561037f57600080fd5b5061020861038e36600461228c565b6106ff565b34801561039f57600080fd5b506005546102b2906001600160a01b031681565b3480156103bf57600080fd5b5061020861079d565b3480156103d457600080fd5b506003546102b2906001600160a01b031681565b3480156103f457600080fd5b506001546001600160a01b03166102b2565b34801561041257600080fd5b506000546001600160a01b0316156102fa565b34801561043157600080fd5b506102b27f000000000000000000000000000000000000000000000000000000000000000081565b34801561046557600080fd5b506102fa61047436600461228c565b61080d565b34801561048557600080fd5b506004546102b2906001600160a01b031681565b3480156104a557600080fd5b506102086104b4366004612242565b610817565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105255760405162461bcd60e51b815260206004820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b60448201526064015b60405180910390fd5b61052f828261089a565b7fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e935507782823360405161056293929190612312565b60405180910390a15050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105cf5760405162461bcd60e51b815260040161051c9060208082526004908201526310a0a6a160e11b604082015260600190565b6105d8816108e1565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced8133604051610609929190612350565b60405180910390a150565b6000546001600160a01b0316331461063f576040516311a8a1bb60e31b815260040160405180910390fd5b610648816108fa565b50565b6000546001600160a01b03163314610676576040516311a8a1bb60e31b815260040160405180910390fd5b62093a80600254426106889190612390565b116106a6576040516324e0285f60e21b815260040160405180910390fd5b6002546000036106c957604051630e4b303f60e21b815260040160405180910390fd5b6001546001600160a01b0316156106f3576040516323295ef960e01b815260040160405180910390fd5b6106fd600061090c565b565b6000546001600160a01b0316331461072a576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b038281169116148015610748575060025415155b15610766576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b0380831691160361079457604051634a2fb73f60e11b815260040160405180910390fd5b61064881610971565b6001546001600160a01b031633146107c8576040516311a7f27160e11b815260040160405180910390fd5b62093a80600254426107da9190612390565b116107f8576040516324e0285f60e21b815260040160405180910390fd5b6001546106fd906001600160a01b031661090c565b6000805b92915050565b6000610822826109bf565b905061082d81610ca5565b5050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b8051156108d85760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b604482015260640161051c565b61082d82610dc6565b6040516316c2fdb560e21b815260040160405180910390fd5b61090381610831565b61064881610e2f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b606060006109cc83610ebd565b905060006109d982610f1c565b905060006109e683610f45565b90506000816109f484610f6e565b6109fd86611124565b604051602001610a0f939291906123a3565b60408051601f1981840301815291815281516020928301206000818152600790935291205490915060ff1615610a935760405162461bcd60e51b8152602060048201526024808201527f4678526f6f7454756e6e656c3a20455849545f414c52454144595f50524f434560448201526314d4d15160e21b606482015260840161051c565b6000818152600760205260408120805460ff19166001179055610ab585611140565b90506000610ac28261128a565b9050610acd8161131a565b6006546001600160a01b03908116911614610b385760405162461bcd60e51b815260206004820152602560248201527f4678526f6f7454756e6e656c3a20494e56414c49445f46585f4348494c445f54604482015264155393915360da1b606482015260840161051c565b6000610b4387611343565b9050610b63610b53846020015190565b87610b5d8a61135f565b8461137b565b610bbb5760405162461bcd60e51b815260206004820152602360248201527f4678526f6f7454756e6e656c3a20494e56414c49445f524543454950545f505260448201526227a7a360e91b606482015260840161051c565b610be985610bc88961162e565b610bd18a61164a565b84610bdb8c611666565b610be48d611682565b61169e565b506000610bf5836117c4565b90507f8c5261668696ce22758910d05bab8f186d6eb247ceac2af2e82c7dc17669b036610c2b610c26836000611800565b611838565b14610c785760405162461bcd60e51b815260206004820152601f60248201527f4678526f6f7454756e6e656c3a20494e56414c49445f5349474e415455524500604482015260640161051c565b6000610c83846118b2565b806020019051810190610c9691906123d0565b9b9a5050505050505050505050565b8051602014610ce05760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b604482015260640161051c565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016638e7d93fa7f0000000000000000000000000000000000000000000000000000000000000000610d3984612447565b6040516001600160e01b031960e085901b16815263ffffffff9290921660048301526024820152604401600060405180830381600087803b158015610d7d57600080fd5b505af1158015610d91573d6000803e3d6000fd5b505050507fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced8133604051610609929190612350565b6004805460065460405163b472047760e01b81526001600160a01b039283169363b472047793610dfa93169186910161246b565b600060405180830381600087803b158015610e1457600080fd5b505af1158015610e28573d6000803e3d6000fd5b5050505050565b6006546001600160a01b031615610e9b5760405162461bcd60e51b815260206004820152602a60248201527f467842617365526f6f7454756e6e656c3a204348494c445f54554e4e454c5f4160448201526913149150511657d4d15560b21b606482015260840161051c565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6040805160208101909152606081526000610f07610f028460408051808201825260008082526020918201528151808301909252825182529182019181019190915290565b6118ce565b60408051602081019091529081529392505050565b60606108118260000151600881518110610f3857610f3861248f565b60200260200101516119da565b60006108118260000151600281518110610f6157610f6161248f565b6020026020010151611838565b6040805160208101909152600081528151606091901561081157600080610f96600086611a77565b60f81c90506001811480610fad57508060ff166003145b1561105557600185516002610fc291906124a5565b610fcc9190612390565b67ffffffffffffffff811115610fe457610fe4612119565b6040519080825280601f01601f19166020018201604052801561100e576020820181803683370190505b509250600061101e600187611a77565b905080846000815181106110345761103461248f565b60200101906001600160f81b031916908160001a90535060019250506110b9565b60028551600261106591906124a5565b61106f9190612390565b67ffffffffffffffff81111561108757611087612119565b6040519080825280601f01601f1916602001820160405280156110b1576020820181803683370190505b509250600091505b825160ff83165b8181101561111a576110e96110d860ff861683612390565b6110e39060026124bc565b88611a77565b8582815181106110fb576110fb61248f565b60200101906001600160f81b031916908160001a9053506001016110c0565b5050505092915050565b60006108118260000151600981518110610f6157610f6161248f565b61116460405180606001604052806060815260200160608152602001600081525090565b61117e8260000151600681518110610f3857610f3861248f565b6020828101829052604080518082018252600080825290830152805180820190915282518152918101908201526111b481611af8565b156111c9576111c2816118ce565b8252611276565b602082015180516000906111df90600190612390565b67ffffffffffffffff8111156111f7576111f7612119565b6040519080825280601f01601f191660200182016040528015611221576020820181803683370190505b50905060008083602101915082602001905061123f82828551611b33565b60408051808201825260008082526020918201528151808301909252845182528085019082015261126f906118ce565b8652505050505b61127f83611124565b604083015250919050565b6040805160808101825260009181018281526060808301939093528152602081019190915260006112d883600001516003815181106112cb576112cb61248f565b60200260200101516118ce565b8360400151815181106112ed576112ed61248f565b602002602001015190506040518060400160405280828152602001611311836118ce565b90529392505050565b600061081182602001516000815181106113365761133661248f565b6020026020010151611bcc565b60006108118260000151600581518110610f6157610f6161248f565b60606108118260000151600781518110610f3857610f3861248f565b6000806113af8460408051808201825260008082526020918201528151808301909252825182529182019181019190915290565b905060006113bc826118ce565b9050606080856000806113ce8b610f6e565b905080516000036113e9576000975050505050505050611626565b855160005b8181101561161c5782518411156114115760009950505050505050505050611626565b6114338882815181106114265761142661248f565b6020026020010151611be6565b9650868051906020012085146114555760009950505050505050505050611626565b61146a8882815181106112cb576112cb61248f565b9550855160110361153f57825184036114cb578d8051906020012061149b87601081518110610f3857610f3861248f565b80519060200120036114b95760019950505050505050505050611626565b60009950505050505050505050611626565b60008385815181106114df576114df61248f565b016020015160f81c905060108111156115055760009a5050505050505050505050611626565b61152a878260ff168151811061151d5761151d61248f565b6020026020010151611c65565b95506115376001866124bc565b945050611614565b85516002036114b957600061156a61156388600081518110610f3857610f3861248f565b8587611c93565b845190915061157982876124bc565b036115ce578e8051906020012061159c88600181518110610f3857610f3861248f565b80519060200120036115bb5760019a5050505050505050505050611626565b60009a5050505050505050505050611626565b806000036115e95760009a5050505050505050505050611626565b6115f381866124bc565b945061160b8760018151811061151d5761151d61248f565b95506116149050565b6001016113ee565b5050505050505050505b949350505050565b60006108118260000151600381518110610f6157610f6161248f565b60006108118260000151600481518110610f6157610f6161248f565b60006108118260000151600081518110610f6157610f6161248f565b60606108118260000151600181518110610f3857610f3861248f565b6005546040516320a9cea560e11b8152600481018490526000918291829182916001600160a01b03909116906341539d4a9060240160a060405180830381865afa1580156116f0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061171491906124cf565b509350509250925061176b828b61172b9190612390565b6040805160208082018f90528183018e9052606082018d905260808083018d90528351808403909101815260a09092019092528051910120908588611d97565b6117b75760405162461bcd60e51b815260206004820152601c60248201527f4678526f6f7454756e6e656c3a20494e56414c49445f48454144455200000000604482015260640161051c565b9998505050505050505050565b60408051602081019091526060815260405180602001604052806117f884602001516001815181106112cb576112cb61248f565b905292915050565b604080518082019091526000808252602082015282518051839081106118285761182861248f565b6020026020010151905092915050565b80516000901580159061184c575081516022115b61185557600080fd5b60006118648360200151611f09565b905060008184600001516118789190612390565b905060008083866020015161188d91906124bc565b90508051915060208310156118a957826020036101000a820491505b50949350505050565b60606108118260200151600281518110610f3857610f3861248f565b60606118d982611af8565b6118e257600080fd5b60006118ed83611f9d565b905060008167ffffffffffffffff81111561190a5761190a612119565b60405190808252806020026020018201604052801561194f57816020015b60408051808201909152600080825260208201528152602001906001900390816119285790505b50905060006119618560200151611f09565b856020015161197091906124bc565b90506000805b848110156119cf5761198783612022565b91506040518060400160405280838152602001848152508482815181106119b0576119b061248f565b60209081029190910101526119c582846124bc565b9250600101611976565b509195945050505050565b80516060906119e857600080fd5b60006119f78360200151611f09565b90506000818460000151611a0b9190612390565b905060008167ffffffffffffffff811115611a2857611a28612119565b6040519080825280601f01601f191660200182016040528015611a52576020820181803683370190505b50905060008160200190506118a9848760200151611a7091906124bc565b82856120c6565b6000611a84600284612532565b15611abe57601082611a97600286612546565b81518110611aa757611aa761248f565b0160200151611ab9919060f81c61255a565b611aee565b601082611acc600286612546565b81518110611adc57611adc61248f565b0160200151611aee919060f81c61257c565b60f81b9392505050565b80516000908103611b0b57506000919050565b6020820151805160001a9060c0821015611b29575060009392505050565b5060019392505050565b80600003611b4057505050565b611b4c6001602061259e565b60ff16811115611b865782518252611b656020846124bc565b9250611b726020836124bc565b9150611b7f602082612390565b9050611b40565b80600003611b9357505050565b60006001611ba2836020612390565b611bae9061010061269b565b611bb89190612390565b935183518516941916939093179091525050565b8051600090601514611bdd57600080fd5b61081182611838565b60606000826000015167ffffffffffffffff811115611c0757611c07612119565b6040519080825280601f01601f191660200182016040528015611c31576020820181803683370190505b5090508051600003611c435792915050565b6000816020019050611c5e84602001518286600001516120c6565b5092915050565b8051600090602114611c7657600080fd5b60008083602001516001611c8a91906124bc565b51949350505050565b60008080611ca086610f6e565b90506000815167ffffffffffffffff811115611cbe57611cbe612119565b6040519080825280601f01601f191660200182016040528015611ce8576020820181803683370190505b5090506000825186611cfa91906124bc565b9050855b81811015611d67576000888281518110611d1a57611d1a61248f565b01602001516001600160f81b03191690508084611d378a85612390565b81518110611d4757611d4761248f565b60200101906001600160f81b031916908160001a90535050600101611cfe565b508180519060200120838051906020012003611d865782519350611d8b565b600093505b50919695505050505050565b600060208251611da79190612532565b15611deb5760405162461bcd60e51b8152602060048201526014602482015273092dcecc2d8d2c840e0e4dedecc40d8cadccee8d60631b604482015260640161051c565b600060208351611dfb9190612546565b9050611e0881600261269b565b8510611e4e5760405162461bcd60e51b81526020600482015260156024820152744c65616620696e64657820697320746f6f2062696760581b604482015260640161051c565b825160009087908290611e629060016124bc565b905060205b81811015611efa57868101519350611e8060028a612532565b600003611eb8576040805160208101859052908101859052606001604051602081830303815290604052805190602001209250611ee5565b60408051602081018690529081018490526060016040516020818303038152906040528051906020012092505b611ef060028a612546565b9850602001611e67565b50509094149695505050505050565b8051600090811a6080811015611f225750600092915050565b60b8811080611f495750611f38600160c061259e565b60ff1681118015611f49575060f881105b15611f575750600192915050565b60c0811015611f8b57611f6c600160b861259e565b611f799060ff1682612390565b611f849060016124bc565b9392505050565b611f6c600160f861259e565b50919050565b80516000908103611fb057506000919050565b600080611fc08460200151611f09565b8460200151611fcf91906124bc565b9050600084600001518560200151611fe791906124bc565b90505b8082101561201957611ffb82612022565b61200590836124bc565b915082612011816126a7565b935050611fea565b50909392505050565b80516000908190811a608081101561203d5760019150611c5e565b60b881101561206357612051608082612390565b61205c9060016124bc565b9150611c5e565b60c08110156120905760b78103600185019450806020036101000a85510460018201810193505050611c5e565b60f88110156120a45761205160c082612390565b60019390930151602084900360f7016101000a900490920160f5190192915050565b806000036120d357505050565b6120df6001602061259e565b60ff16811115611b8657825182526120f86020846124bc565b92506121056020836124bc565b9150612112602082612390565b90506120d3565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561215857612158612119565b604052919050565b600067ffffffffffffffff82111561217a5761217a612119565b50601f01601f191660200190565b600082601f83011261219957600080fd5b81356121ac6121a782612160565b61212f565b8181528460208386010111156121c157600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156121f157600080fd5b823567ffffffffffffffff8082111561220957600080fd5b61221586838701612188565b9350602085013591508082111561222b57600080fd5b5061223885828601612188565b9150509250929050565b60006020828403121561225457600080fd5b813567ffffffffffffffff81111561226b57600080fd5b61162684828501612188565b6001600160a01b038116811461064857600080fd5b60006020828403121561229e57600080fd5b8135611f8481612277565b6000602082840312156122bb57600080fd5b5035919050565b60005b838110156122dd5781810151838201526020016122c5565b50506000910152565b600081518084526122fe8160208601602086016122c2565b601f01601f19169290920160200192915050565b60608152600061232560608301866122e6565b828103602084015261233781866122e6565b91505060018060a01b0383166040830152949350505050565b60408152600061236360408301856122e6565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052601160045260246000fd5b818103818111156108115761081161237a565b838152600083516123bb8160208501602088016122c2565b60209201918201929092526040019392505050565b6000602082840312156123e257600080fd5b815167ffffffffffffffff8111156123f957600080fd5b8201601f8101841361240a57600080fd5b80516124186121a782612160565b81815285602083850101111561242d57600080fd5b61243e8260208301602086016122c2565b95945050505050565b80516020808301519190811015611f975760001960209190910360031b1b16919050565b6001600160a01b0383168152604060208201819052600090611626908301846122e6565b634e487b7160e01b600052603260045260246000fd5b80820281158282048414176108115761081161237a565b808201808211156108115761081161237a565b600080600080600060a086880312156124e757600080fd5b85519450602086015193506040860151925060608601519150608086015161250e81612277565b809150509295509295909350565b634e487b7160e01b600052601260045260246000fd5b6000826125415761254161251c565b500690565b6000826125555761255561251c565b500490565b600060ff83168061256d5761256d61251c565b8060ff84160691505092915050565b600060ff83168061258f5761258f61251c565b8060ff84160491505092915050565b60ff82811682821603908111156108115761081161237a565b600181815b808511156125f25781600019048211156125d8576125d861237a565b808516156125e557918102915b93841c93908002906125bc565b509250929050565b60008261260957506001610811565b8161261657506000610811565b816001811461262c576002811461263657612652565b6001915050610811565b60ff8411156126475761264761237a565b50506001821b610811565b5060208310610133831016604e8410600b8410161715612675575081810a610811565b61267f83836125b7565b80600019048211156126935761269361237a565b029392505050565b6000611f8483836125fa565b6000600182016126b9576126b961237a565b506001019056fea2646970667358221220be914e6f3dfeddf3d452269e093e5fe0dbea3f244152c7e04a21363d6d0e6e3764736f6c63430008110033";

type PolygonHubConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PolygonHubConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PolygonHubConnector__factory extends ContractFactory {
  constructor(...args: PolygonHubConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _checkPointManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PolygonHubConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _checkPointManager,
      overrides || {}
    ) as Promise<PolygonHubConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _checkPointManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _checkPointManager,
      overrides || {}
    );
  }
  override attach(address: string): PolygonHubConnector {
    return super.attach(address) as PolygonHubConnector;
  }
  override connect(signer: Signer): PolygonHubConnector__factory {
    return super.connect(signer) as PolygonHubConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PolygonHubConnectorInterface {
    return new utils.Interface(_abi) as PolygonHubConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PolygonHubConnector {
    return new Contract(address, _abi, signerOrProvider) as PolygonHubConnector;
  }
}
