/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ConsensysHubConnector,
  ConsensysHubConnectorInterface,
} from "../../../../../contracts/messaging/connectors/consensys/ConsensysHubConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Connector__processMessage_notUsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__ownershipDelayElapsed_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6101006040523480156200001257600080fd5b506040516200121e3803806200121e833981016040819052620000359162000286565b848484848484848484846200004a3362000186565b8463ffffffff16600003620000955760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038216620000e15760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b60448201526064016200008c565b63ffffffff8086166080526001600160a01b0380851660a05283811660c05290851660e05281161562000119576200011981620001eb565b604080516001600160a01b0385811682528481166020830152831681830152905163ffffffff86811692908816917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a3505050505050505050505050505050620002f6565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b805163ffffffff811681146200026957600080fd5b919050565b80516001600160a01b03811681146200026957600080fd5b600080600080600060a086880312156200029f57600080fd5b620002aa8662000254565b9450620002ba6020870162000254565b9350620002ca604087016200026e565b9250620002da606087016200026e565b9150620002ea608087016200026e565b90509295509295909350565b60805160a05160c05160e051610ec46200035a60003960008181610120015261090e0152600081816102160152818161039601526108e70152600081816103490152818161044b015281816107760152610ab8015260006101c20152610ec46000f3fe6080604052600436106101025760003560e01c8063715018a611610095578063cc39428311610064578063cc394283146102ce578063d1851c92146102ee578063d232c2201461030c578063d69f9d6114610337578063db1b76591461036b57600080fd5b8063715018a6146102665780638da5cb5b1461027b578063b1f8100d14610299578063c5b350df146102b957600080fd5b806352a9674b116100d157806352a9674b146101b05780635bd11efc146101e45780635f61e3ec146102045780636a42b8f81461025057600080fd5b8063141684161461010e5780633cf52ffb1461015c57806348e6fa231461017b5780634ff746f61461019057600080fd5b3661010957005b600080fd5b34801561011a57600080fd5b506101427f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020015b60405180910390f35b34801561016857600080fd5b506002545b604051908152602001610153565b61018e610189366004610c3c565b61038b565b005b34801561019c57600080fd5b5061018e6101ab366004610ca0565b610440565b3480156101bc57600080fd5b506101427f000000000000000000000000000000000000000000000000000000000000000081565b3480156101f057600080fd5b5061018e6101ff366004610cf2565b6104e6565b34801561021057600080fd5b506102387f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610153565b34801561025c57600080fd5b5062093a8061016d565b34801561027257600080fd5b5061018e61051d565b34801561028757600080fd5b506000546001600160a01b0316610238565b3480156102a557600080fd5b5061018e6102b4366004610cf2565b6105d1565b3480156102c557600080fd5b5061018e61066f565b3480156102da57600080fd5b50600354610238906001600160a01b031681565b3480156102fa57600080fd5b506001546001600160a01b0316610238565b34801561031857600080fd5b506000546001600160a01b0316155b6040519015158152602001610153565b34801561034357600080fd5b506102387f000000000000000000000000000000000000000000000000000000000000000081565b34801561037757600080fd5b50610327610386366004610cf2565b6106df565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103f75760405162461bcd60e51b815260206004820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b60448201526064015b60405180910390fd5b61040182826106f0565b7fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e935507782823360405161043493929190610d5c565b60405180910390a15050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104a15760405162461bcd60e51b81526004016103ee9060208082526004908201526310a0a6a160e11b604082015260600190565b6104aa81610852565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced81336040516104db929190610d9a565b60405180910390a150565b6000546001600160a01b03163314610511576040516311a8a1bb60e31b815260040160405180910390fd5b61051a81610995565b50565b6000546001600160a01b03163314610548576040516311a8a1bb60e31b815260040160405180910390fd5b62093a806002544261055a9190610dda565b11610578576040516324e0285f60e21b815260040160405180910390fd5b60025460000361059b57604051630e4b303f60e21b815260040160405180910390fd5b6001546001600160a01b0316156105c5576040516323295ef960e01b815260040160405180910390fd5b6105cf60006109fe565b565b6000546001600160a01b031633146105fc576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b03828116911614801561061a575060025415155b15610638576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b0380831691160361066657604051634a2fb73f60e11b815260040160405180910390fd5b61051a81610a63565b6001546001600160a01b0316331461069a576040516311a7f27160e11b815260040160405180910390fd5b62093a80600254426106ac9190610dda565b116106ca576040516324e0285f60e21b815260040160405180910390fd5b6001546105cf906001600160a01b03166109fe565b60006106ea82610ab1565b92915050565b815160201461072b5760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b60448201526064016103ee565b8051156107695760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b60448201526064016103ee565b6003546001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169163220b5b8291349116816107af4262093a80610ded565b6107ba906001610ded565b6040516327fba37b60e11b906107d4908a90602401610e00565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e088901b909216825261081c94939291600401610e13565b6000604051808303818588803b15801561083557600080fd5b505af1158015610849573d6000803e3d6000fd5b50505050505050565b600354610867906001600160a01b0316610ab1565b6108a25760405162461bcd60e51b815260206004820152600c60248201526b10b61921b7b73732b1ba37b960a11b60448201526064016103ee565b80516020146108dd5760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b60448201526064016103ee565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016638e7d93fa7f000000000000000000000000000000000000000000000000000000000000000061093684610e4a565b6040516001600160e01b031960e085901b16815263ffffffff9290921660048301526024820152604401600060405180830381600087803b15801561097a57600080fd5b505af115801561098e573d6000803e3d6000fd5b5050505050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b60006106ea7f0000000000000000000000000000000000000000000000000000000000000000836000336001600160a01b03841614610b1c5760405162461bcd60e51b81526020600482015260076024820152662162726964676560c81b60448201526064016103ee565b816001600160a01b0316836001600160a01b03166367e404ce6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b889190610e71565b6001600160a01b0316149392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610bc057600080fd5b813567ffffffffffffffff80821115610bdb57610bdb610b99565b604051601f8301601f19908116603f01168101908282118183101715610c0357610c03610b99565b81604052838152866020858801011115610c1c57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060408385031215610c4f57600080fd5b823567ffffffffffffffff80821115610c6757600080fd5b610c7386838701610baf565b93506020850135915080821115610c8957600080fd5b50610c9685828601610baf565b9150509250929050565b600060208284031215610cb257600080fd5b813567ffffffffffffffff811115610cc957600080fd5b610cd584828501610baf565b949350505050565b6001600160a01b038116811461051a57600080fd5b600060208284031215610d0457600080fd5b8135610d0f81610cdd565b9392505050565b6000815180845260005b81811015610d3c57602081850181015186830182015201610d20565b506000602082860101526020601f19601f83011685010191505092915050565b606081526000610d6f6060830186610d16565b8281036020840152610d818186610d16565b91505060018060a01b0383166040830152949350505050565b604081526000610dad6040830185610d16565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052601160045260246000fd5b818103818111156106ea576106ea610dc4565b808201808211156106ea576106ea610dc4565b602081526000610d0f6020830184610d16565b60018060a01b0385168152836020820152826040820152608060608201526000610e406080830184610d16565b9695505050505050565b80516020808301519190811015610e6b576000198160200360031b1b821691505b50919050565b600060208284031215610e8357600080fd5b8151610d0f81610cdd56fea2646970667358221220e0817364ae6dc6c0e4b9bfee0e9f7ae0bfba382718fedbf4bf5f445ed6ede8b864736f6c63430008110033";

type ConsensysHubConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConsensysHubConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConsensysHubConnector__factory extends ContractFactory {
  constructor(...args: ConsensysHubConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ConsensysHubConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      overrides || {}
    ) as Promise<ConsensysHubConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      overrides || {}
    );
  }
  override attach(address: string): ConsensysHubConnector {
    return super.attach(address) as ConsensysHubConnector;
  }
  override connect(signer: Signer): ConsensysHubConnector__factory {
    return super.connect(signer) as ConsensysHubConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConsensysHubConnectorInterface {
    return new utils.Interface(_abi) as ConsensysHubConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ConsensysHubConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ConsensysHubConnector;
  }
}
