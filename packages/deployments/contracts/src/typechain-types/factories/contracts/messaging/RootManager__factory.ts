/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  RootManager,
  RootManagerInterface,
} from "../../../contracts/messaging/RootManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_merkle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__ownershipDelayElapsed_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "connector",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32[]",
        name: "domains",
        type: "uint32[]",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "connectors",
        type: "address[]",
      },
    ],
    name: "ConnectorAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "connector",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32[]",
        name: "domains",
        type: "uint32[]",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "connectors",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "ConnectorRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "updated",
        type: "uint256",
      },
    ],
    name: "DelayBlocksUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "connector",
        type: "address",
      },
    ],
    name: "DomainAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
    ],
    name: "DomainRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "connector",
        type: "address",
      },
    ],
    name: "PropagateFailed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "fraudulentRoot",
        type: "bytes32",
      },
    ],
    name: "RootDiscarded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "aggregateRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "domainsHash",
        type: "bytes32",
      },
    ],
    name: "RootPropagated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "receivedRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "queueIndex",
        type: "uint256",
      },
    ],
    name: "RootReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "aggregateRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32[]",
        name: "aggregatedMessageRoots",
        type: "bytes32[]",
      },
    ],
    name: "RootsAggregated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "watcherManager",
        type: "address",
      },
    ],
    name: "WatcherManagerChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "DEQUEUE_MAX",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_DOMAINS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MERKLE",
    outputs: [
      {
        internalType: "contract MerkleTreeManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_connector",
        type: "address",
      },
    ],
    name: "addConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_inbound",
        type: "bytes32",
      },
    ],
    name: "aggregate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "connectors",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "connectorsHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delayBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dequeue",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "discardRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "domains",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "domainsHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
    ],
    name: "getConnectorForDomain",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
    ],
    name: "getDomainIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPendingInboundRootsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
    ],
    name: "isDomainSupported",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastPropagatedRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingInboundRoots",
    outputs: [
      {
        internalType: "uint128",
        name: "first",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "last",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_connectors",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_fees",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "_encodedData",
        type: "bytes[]",
      },
    ],
    name: "propagate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
    ],
    name: "removeConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
    ],
    name: "setDelayBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    name: "setWatcherManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_connectors",
        type: "address[]",
      },
    ],
    name: "validateConnectors",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32[]",
        name: "_domains",
        type: "uint32[]",
      },
      {
        internalType: "address[]",
        name: "_connectors",
        type: "address[]",
      },
    ],
    name: "validateDomains",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "watcherManager",
    outputs: [
      {
        internalType: "contract WatcherManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162002b5c38038062002b5c833981016040819052620000349162000163565b600380546001600160a81b0319166101006001600160a01b038416021790556200005e33620000db565b6001600160a01b038216620000a85760405162461bcd60e51b815260206004820152600c60248201526b217a65726f206d65726b6c6560a01b604482015260640160405180910390fd5b6001600160a01b0382166080526009839055620000d2600a62000140602090811b6200142317901c565b505050620001a4565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b60019055565b80516001600160a01b03811681146200015e57600080fd5b919050565b6000806000606084860312156200017957600080fd5b835192506200018b6020850162000146565b91506200019b6040850162000146565b90509250925092565b60805161298e620001ce6000396000818161052c01528181610e540152610ee1015261298e6000f3fe60806040526004361061020f5760003560e01c80638456cb5911610118578063b1f8100d116100a0578063d1851c921161006f578063d1851c9214610621578063d232c2201461063f578063d2a3cc711461065e578063db0f01691461067e578063e6f1208d1461069e57600080fd5b8063b1f8100d146105b6578063b904670f146105d6578063c5b350df146105f6578063c8ef89de1461060b57600080fd5b8063957908d1116100e7578063957908d1146104f0578063a01892a51461051a578063a792c29b1461054e578063aa0d60a314610573578063ad9c0c2e146105a057600080fd5b80638456cb59146104885780638da5cb5b1461049d5780638e7d93fa146104bb578063909907cb146104db57600080fd5b8063412e12db1161019b5780636a42b8f81161016a5780636a42b8f8146103dc578063715018a6146103f25780637bc24d99146104075780637d434e911461041d5780637d5343081461043d57600080fd5b8063412e12db14610366578063498c2c2e146103795780635c975abb1461038f57806366cf8fab146103a757600080fd5b806324ec5d05116101e257806324ec5d05146102b757806327186c6a146102fc5780633c4baaf81461031c5780633cf52ffb1461033c5780633f4ba83a1461035157600080fd5b80630165bc81146102145780630f8ef4ee1461023d57806313ede1a11461025f5780631eeaabea14610297575b600080fd5b34801561022057600080fd5b5061022a600e5481565b6040519081526020015b60405180910390f35b34801561024957600080fd5b5061025d61025836600461204e565b6106be565b005b34801561026b57600080fd5b5061027f61027a36600461204e565b610733565b6040516001600160a01b039091168152602001610234565b3480156102a357600080fd5b5061025d6102b236600461204e565b61075d565b3480156102c357600080fd5b506102ec6102d2366004612080565b63ffffffff16600090815260086020526040902054151590565b6040519015158152602001610234565b34801561030857600080fd5b5061025d6103173660046120e7565b61080f565b34801561032857600080fd5b5061022a610337366004612080565b61087a565b34801561034857600080fd5b5060025461022a565b34801561035d57600080fd5b5061025d6108de565b61025d610374366004612170565b61091b565b34801561038557600080fd5b5061022a60075481565b34801561039b57600080fd5b5060035460ff166102ec565b3480156103b357600080fd5b506103c76103c236600461204e565b610c08565b60405163ffffffff9091168152602001610234565b3480156103e857600080fd5b5062093a8061022a565b3480156103fe57600080fd5b5061025d610c42565b34801561041357600080fd5b5061022a60055481565b34801561042957600080fd5b5061027f610438366004612080565b610c6d565b34801561044957600080fd5b50600a54610468906001600160801b0380821691600160801b90041682565b604080516001600160801b03938416815292909116602083015201610234565b34801561049457600080fd5b5061025d610ca5565b3480156104a957600080fd5b506000546001600160a01b031661027f565b3480156104c757600080fd5b5061025d6104d63660046122e3565b610d5c565b3480156104e757600080fd5b5061022a610e17565b3480156104fc57600080fd5b50610505610e28565b60408051928352602083019190915201610234565b34801561052657600080fd5b5061027f7f000000000000000000000000000000000000000000000000000000000000000081565b34801561055a57600080fd5b5060035461027f9061010090046001600160a01b031681565b34801561057f57600080fd5b50610588606481565b6040516001600160801b039091168152602001610234565b3480156105ac57600080fd5b5061022a60095481565b3480156105c257600080fd5b5061025d6105d1366004612324565b610fb6565b3480156105e257600080fd5b5061025d6105f136600461233f565b611057565b34801561060257600080fd5b5061025d6110cf565b34801561061757600080fd5b5061022a6101f481565b34801561062d57600080fd5b506001546001600160a01b031661027f565b34801561064b57600080fd5b506000546001600160a01b0316156102ec565b34801561066a57600080fd5b5061025d610679366004612324565b61113f565b34801561068a57600080fd5b5061025d610699366004612372565b611223565b3480156106aa57600080fd5b5061025d6106b9366004612080565b611336565b6000546001600160a01b031633146106e9576040516311a8a1bb60e31b815260040160405180910390fd5b6106f1611429565b6106fc600a82611472565b6040518181527fd2a17a10ab346c94fae909b2fbfa0fedaf30d08983e74dcc0a92be2c40c437f9906020015b60405180910390a150565b6006818154811061074357600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b03163314610788576040516311a8a1bb60e31b815260040160405180910390fd5b60095481036107cd5760405162461bcd60e51b815260206004820152600c60248201526b2164656c6179426c6f636b7360a01b60448201526064015b60405180910390fd5b6009546040805183815260208101929092527fef322fd61cb3d8514326f0b28140a92a29cd10996ad80d0671e43d2483464c1d910160405180910390a1600955565b60075482826040516020016108259291906123de565b60405160208183030381529060405280519060200120146108765760405162461bcd60e51b815260206004820152600b60248201526a21636f6e6e6563746f727360a81b60448201526064016107c4565b5050565b63ffffffff81166000908152600860205260408120548082036108cc5760405162461bcd60e51b815260206004820152600a602482015269085cdd5c1c1bdc9d195960b21b60448201526064016107c4565b6108d7600182612440565b9392505050565b6000546001600160a01b03163314610909576040516311a8a1bb60e31b815260040160405180910390fd5b610911611429565b6109196114e3565b565b610923611535565b61092d858561080f565b83828114801561093d5750808251145b61097b5760405162461bcd60e51b815260206004820152600f60248201526e696e76616c6964206c656e6774687360881b60448201526064016107c4565b600080610986610e28565b91509150600e5482036109cc5760405162461bcd60e51b815260206004820152600e60248201526d1c99591d5b99185b9d081c9bdbdd60921b60448201526064016107c4565b600e8290553460005b848163ffffffff161015610bb95789898263ffffffff168181106109fb576109fb612453565b9050602002016020810190610a109190612324565b6001600160a01b03166348e6fa2389898463ffffffff16818110610a3657610a36612453565b9050602002013586604051602001610a5091815260200190565b604051602081830303815290604052898563ffffffff1681518110610a7757610a77612453565b60200260200101516040518463ffffffff1660e01b8152600401610a9c9291906124af565b6000604051808303818588803b158015610ab557600080fd5b505af193505050508015610ac7575060015b610b84577f51f2ef0ced5ef0ec14268d79d48589f9ccff35b2b0baf5059a90166caffea7a760048263ffffffff1681548110610b0557610b05612453565b90600052602060002090600891828204019190066004029054906101000a900463ffffffff168b8b8463ffffffff16818110610b4357610b43612453565b9050602002016020810190610b589190612324565b6040805163ffffffff90931683526001600160a01b0390911660208301520160405180910390a1610bb1565b87878263ffffffff16818110610b9c57610b9c612453565b9050602002013582610bae9190612440565b91505b6001016109d5565b50600554604080518581526020810185905280820192909252517f3fcedb4669de80ca7de6e18b7b25cc8e4f6861796f1db0f2409fcdf0d6901f569181900360600190a1505050505050505050565b60048181548110610c1857600080fd5b9060005260206000209060089182820401919006600402915054906101000a900463ffffffff1681565b6000546001600160a01b03163314610919576040516311a8a1bb60e31b815260040160405180910390fd5b60006006610c7a8361087a565b81548110610c8a57610c8a612453565b6000918252602090912001546001600160a01b031692915050565b6003546040516384785ecd60e01b81523360048201526101009091046001600160a01b0316906384785ecd90602401602060405180830381865afa158015610cf1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1591906124dd565b610d4c5760405162461bcd60e51b815260206004820152600860248201526710bbb0ba31b432b960c11b60448201526064016107c4565b610d54611535565b61091961157b565b610d64611535565b8133610d6f82610c6d565b6001600160a01b031614610db25760405162461bcd60e51b815260206004820152600a60248201526910b1b7b73732b1ba37b960b11b60448201526064016107c4565b6000610dbf600a846115b8565b6040805163ffffffff87168152602081018690526001600160801b0383168183015290519192507f1daad24ee1bf0bcc72ab681d29df86ec2794361b223da31f148b9f826cd135a8919081900360600190a150505050565b6000610e23600a61162a565b905090565b600080610e33611535565b600954600090610e4790600a906064611654565b90508051600003610edc577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c9b0a6de6040518163ffffffff1660e01b81526004016040805180830381865afa158015610eaf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ed391906124ff565b92509250509091565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166334a55ee6846040518263ffffffff1660e01b8152600401610f2b919061255e565b60408051808303816000875af1158015610f49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f6d91906124ff565b915091507f41b13c36968d02a1fd71e0f5db55ba2fb043c215a4d1e17633293ff273a77cd4828285604051610fa493929190612571565b60405180910390a19093509150509091565b6000546001600160a01b03163314610fe1576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b038281169116148015610fff575060025415155b1561101d576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b0380831691160361104b57604051634a2fb73f60e11b815260040160405180910390fd5b611054816119d6565b50565b6000546001600160a01b03163314611082576040516311a8a1bb60e31b815260040160405180910390fd5b61108c8282611a24565b7f95ef69787290b89c35a092c89db1b283b43724d01263e683cfb560c758cdbe708282600460066040516110c39493929190612756565b60405180910390a15050565b6001546001600160a01b031633146110fa576040516311a7f27160e11b815260040160405180910390fd5b62093a806002544261110c9190612440565b1161112a576040516324e0285f60e21b815260040160405180910390fd5b600154610919906001600160a01b0316611c10565b6000546001600160a01b0316331461116a576040516311a8a1bb60e31b815260040160405180910390fd5b6003546001600160a01b036101009091048116908216036111cd5760405162461bcd60e51b815260206004820152601760248201527f616c72656164792077617463686572206d616e6167657200000000000000000060448201526064016107c4565b60038054610100600160a81b0319166101006001600160a01b038416908102919091179091556040519081527fc16d059e43d7f8e29ccb4e001a2f249d3c59e274925d6a6bc3912943441d9f6c90602001610728565b8281146112655760405162461bcd60e51b815260206004820152601060248201526f042dac2e8c6d0d2dcce40d8cadccee8d60831b60448201526064016107c4565b600554848460405160200161127b9291906127a3565b60405160208183030381529060405280519060200120146112c95760405162461bcd60e51b815260206004820152600860248201526721646f6d61696e7360c01b60448201526064016107c4565b60075482826040516020016112df9291906123de565b60405160208183030381529060405280519060200120146113305760405162461bcd60e51b815260206004820152600b60248201526a21636f6e6e6563746f727360a81b60448201526064016107c4565b50505050565b6003546040516384785ecd60e01b81523360048201526101009091046001600160a01b0316906384785ecd90602401602060405180830381865afa158015611382573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113a691906124dd565b6113dd5760405162461bcd60e51b815260206004820152600860248201526710bbb0ba31b432b960c11b60448201526064016107c4565b60006113e882611c75565b90507f6a1097f391a37dc63e0860e64ec34442971eeed2fda4d1a90141fa9ce25eb7eb828260046006336040516110c39594939291906127e1565b60019055565b60035460ff166109195760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016107c4565b600081815260038301602052604090205460ff16156114c55760405162461bcd60e51b815260206004820152600f60248201526e185b1c9958591e481c995b5bdd9959608a1b60448201526064016107c4565b6000908152600390910160205260409020805460ff19166001179055565b6114eb611429565b6003805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b60035460ff16156109195760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016107c4565b611583611535565b6003805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586115183390565b8154600090439084906010906115dd90600160801b90046001600160801b0316612837565b82546001600160801b038083166101009490940a84810291021990911617909255600090815260018601602090815260408083209690965560029096019095529290932092909255919050565b80546000906001600160801b03600160801b82048116911661164c8282611eec565b949350505050565b82546060906001600160801b0380821691600160801b9004168181101561168d57505060408051600081526020810190915290506108d7565b816001600160801b03166000036116d65760405162461bcd60e51b815260206004820152600d60248201526c1c5d595d5948085a5b9a5d09d9609a1b60448201526064016107c4565b6000846001600160801b0316116117215760405162461bcd60e51b815260206004820152600f60248201526e042c2c6c6cae0e8c2c4d8ca40dac2f608b1b60448201526064016107c4565b6000600161172f868561285d565b6117399190612884565b9050806001600160801b0316826001600160801b03161115611759578091505b5060006117668643612440565b905060005b826001600160801b0316846001600160801b0316116117bd576001600160801b03831660009081526002890160205260409020548281116117b05760019150506117bd565b506000199092019161176b565b806117dd57505060408051600081526020810190915292506108d7915050565b6000846117eb85600161285d565b6117f59190612884565b6001600160801b031667ffffffffffffffff81111561181657611816612129565b60405190808252806020026020018201604052801561183f578160200160208202803683370190505b5090506000805b856001600160801b0316876001600160801b0316116118fb576001600160801b038716600090815260018c01602090815260408083205480845260038f019092529091205460ff166118bc57808484815181106118a5576118a5612453565b6020026020010181815250508260010192506118c3565b8160010191505b506001600160801b038716600090815260018c81016020908152604080842084905560028f0190915282209190915590960195611846565b8a546fffffffffffffffffffffffffffffffff19166001600160801b038816178b55600081900361193557829750505050505050506108d7565b60008267ffffffffffffffff81111561195057611950612129565b604051908082528060200260200182016040528015611979578160200160208202803683370190505b50905060005b838110156119c65784818151811061199957611999612453565b60200260200101518282815181106119b3576119b3612453565b602090810291909101015260010161197f565b5097506108d79650505050505050565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b63ffffffff821660009081526008602052604090205415611a775760405162461bcd60e51b815260206004820152600d60248201526c646f6d61696e2065786973747360981b60448201526064016107c4565b6001600160a01b038116611aba5760405162461bcd60e51b815260206004820152600a60248201526910b1b7b73732b1ba37b960b11b60448201526064016107c4565b6004546101f411611b0d5760405162461bcd60e51b815260206004820152601960248201527f446f6d61696e496e64657865722061742063617061636974790000000000000060448201526064016107c4565b600480546001818101835560088083047f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b01805463ffffffff808916600790961687026101000a8681029102199091161790556006805492830190557ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f90910180546001600160a01b0386166001600160a01b03199091161790559154600091825260209290925260409020819055611bc4611f16565b6040805163ffffffff851681526001600160a01b03841660208201527f4fc27362d8ab3086efd93b7880e99ac02e906d0ba9b71ca90239ade53090f703910160405180910390a1505050565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b600080611c818361087a565b9050600060068281548110611c9857611c98612453565b6000918252602090912001546001600160a01b0316905080611cf05760405162461bcd60e51b8152602060048201526011602482015270636f6e6e6563746f72202165786973747360781b60448201526064016107c4565b600454600090611d0290600190612440565b905080831015611e1b57600060048281548110611d2157611d21612453565b90600052602060002090600891828204019190066004029054906101000a900463ffffffff1690508060048581548110611d5d57611d5d612453565b90600052602060002090600891828204019190066004026101000a81548163ffffffff021916908363ffffffff16021790555060068281548110611da357611da3612453565b600091825260209091200154600680546001600160a01b039092169186908110611dcf57611dcf612453565b600091825260209091200180546001600160a01b0319166001600160a01b0392909216919091179055611e038460016128a4565b63ffffffff9091166000908152600860205260409020555b6004805480611e2c57611e2c6128b7565b600082815260209020600860001990920191820401805463ffffffff600460078516026101000a021916905590556006805480611e6b57611e6b6128b7565b60008281526020808220830160001990810180546001600160a01b031916905590920190925563ffffffff87168252600890526040812055611eab611f16565b60405163ffffffff861681527f7e560b48a4bba1688eb45afd6712a11fa42b9abbb48a8e14e2f15e467ab420e49060200160405180910390a1509392505050565b600081611efa84600161285d565b611f049190612884565b6001600160801b031690505b92915050565b60006004805480602002602001604051908101604052809291908181526020018280548015611f9057602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff1681526020019060040190602082600301049283019260010382029150808411611f535790505b5050505050905060006006805480602002602001604051908101604052809291908181526020018280548015611fef57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611fd1575b505050505090508160405160200161200791906128cd565b60408051601f1981840301815290829052805160209182012060055561202f91839101612917565b60408051601f1981840301815291905280516020909101206007555050565b60006020828403121561206057600080fd5b5035919050565b803563ffffffff8116811461207b57600080fd5b919050565b60006020828403121561209257600080fd5b6108d782612067565b60008083601f8401126120ad57600080fd5b50813567ffffffffffffffff8111156120c557600080fd5b6020830191508360208260051b85010111156120e057600080fd5b9250929050565b600080602083850312156120fa57600080fd5b823567ffffffffffffffff81111561211157600080fd5b61211d8582860161209b565b90969095509350505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561216857612168612129565b604052919050565b60008060008060006060868803121561218857600080fd5b67ffffffffffffffff808735111561219f57600080fd5b6121ac888835890161209b565b90965094506020870135818111156121c357600080fd5b6121cf89828a0161209b565b9095509350506040870135818111156121e757600080fd5b8701601f810189136121f857600080fd5b80358281111561220a5761220a612129565b61221960208260051b0161213f565b8082825260208201915060208360051b85010192508b83111561223b57600080fd5b602084015b838110156122d057858135111561225657600080fd5b803585018d603f82011261226957600080fd5b60208101358781111561227e5761227e612129565b612291601f8201601f191660200161213f565b8181528f60408385010111156122a657600080fd5b81604084016020830137600060208383010152808652505050602083019250602081019050612240565b5080955050505050509295509295909350565b600080604083850312156122f657600080fd5b6122ff83612067565b946020939093013593505050565b80356001600160a01b038116811461207b57600080fd5b60006020828403121561233657600080fd5b6108d78261230d565b6000806040838503121561235257600080fd5b61235b83612067565b91506123696020840161230d565b90509250929050565b6000806000806040858703121561238857600080fd5b843567ffffffffffffffff808211156123a057600080fd5b6123ac8883890161209b565b909650945060208701359150808211156123c557600080fd5b506123d28782880161209b565b95989497509550505050565b60208082528181018390526000908460408401835b8681101561241f576001600160a01b0361240c8461230d565b16825291830191908301906001016123f3565b509695505050505050565b634e487b7160e01b600052601160045260246000fd5b81810381811115611f1057611f1061242a565b634e487b7160e01b600052603260045260246000fd5b6000815180845260005b8181101561248f57602081850181015186830182015201612473565b506000602082860101526020601f19601f83011685010191505092915050565b6040815260006124c26040830185612469565b82810360208401526124d48185612469565b95945050505050565b6000602082840312156124ef57600080fd5b815180151581146108d757600080fd5b6000806040838503121561251257600080fd5b505080516020909101519092909150565b600081518084526020808501945080840160005b8381101561255357815187529582019590820190600101612537565b509495945050505050565b6020815260006108d76020830184612523565b8381528260208201526060604082015260006124d46060830184612523565b805480835260008281526020808220940193909190825b8260078201101561261f57815463ffffffff8082168852602082811c821690890152604082811c821690890152606082811c821690890152608082811c82169089015260a082811c82169089015260c082811c9091169088015260e090811c90870152610100909501946001909101906008016125a7565b9054908281101561263d5763ffffffff821686526020909501946001015b8281101561265d57602082901c63ffffffff168652602095909501946001015b8281101561267c5763ffffffff604083901c1686526020909501946001015b8281101561269b5763ffffffff606083901c1686526020909501946001015b828110156126ba5763ffffffff608083901c1686526020909501946001015b828110156126d95763ffffffff60a083901c1686526020909501946001015b828110156126f85763ffffffff60c083901c1686526020909501946001015b8281101561270e5760e082901c86526020860195505b5093949350505050565b6000815480845260208085019450836000528060002060005b838110156125535781546001600160a01b031687529582019560019182019101612731565b63ffffffff851681526001600160a01b038416602082015260806040820181905260009061278690830185612590565b82810360608401526127988185612718565b979650505050505050565b60208082528181018390526000908460408401835b8681101561241f5763ffffffff6127ce84612067565b16825291830191908301906001016127b8565b63ffffffff86168152600060018060a01b03808716602084015260a0604084015261280f60a0840187612590565b83810360608501526128218187612718565b9250508084166080840152509695505050505050565b60006001600160801b038083168181036128535761285361242a565b6001019392505050565b6001600160801b0381811683821601908082111561287d5761287d61242a565b5092915050565b6001600160801b0382811682821603908082111561287d5761287d61242a565b80820180821115611f1057611f1061242a565b634e487b7160e01b600052603160045260246000fd5b6020808252825182820181905260009190848201906040850190845b8181101561290b57835163ffffffff16835292840192918401916001016128e9565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b8181101561290b5783516001600160a01b03168352928401929184019160010161293356fea2646970667358221220a8c58850922a44dbb0897daa160e573a2789f40adfc549f9fa8345ff5c1ba6e864736f6c63430008110033";

type RootManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RootManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RootManager__factory extends ContractFactory {
  constructor(...args: RootManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RootManager> {
    return super.deploy(
      _delayBlocks,
      _merkle,
      _watcherManager,
      overrides || {}
    ) as Promise<RootManager>;
  }
  override getDeployTransaction(
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _delayBlocks,
      _merkle,
      _watcherManager,
      overrides || {}
    );
  }
  override attach(address: string): RootManager {
    return super.attach(address) as RootManager;
  }
  override connect(signer: Signer): RootManager__factory {
    return super.connect(signer) as RootManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RootManagerInterface {
    return new utils.Interface(_abi) as RootManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RootManager {
    return new Contract(address, _abi, signerOrProvider) as RootManager;
  }
}
