/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../../../common";

export type TokenIdStruct = {
  domain: PromiseOrValue<BigNumberish>;
  id: PromiseOrValue<BytesLike>;
};

export type TokenIdStructOutput = [number, string] & {
  domain: number;
  id: string;
};

export interface TokenFacetInterface extends utils.Interface {
  functions: {
    "addStableSwapPool((uint32,bytes32),address)": FunctionFragment;
    "adoptedToCanonical(address)": FunctionFragment;
    "adoptedToLocalExternalPools((uint32,bytes32))": FunctionFragment;
    "adoptedToLocalExternalPools(bytes32)": FunctionFragment;
    "approvedAssets(bytes32)": FunctionFragment;
    "approvedAssets((uint32,bytes32))": FunctionFragment;
    "canonicalToAdopted(bytes32)": FunctionFragment;
    "canonicalToAdopted((uint32,bytes32))": FunctionFragment;
    "canonicalToRepresentation(bytes32)": FunctionFragment;
    "canonicalToRepresentation((uint32,bytes32))": FunctionFragment;
    "getCustodiedAmount(bytes32)": FunctionFragment;
    "getLocalAndAdoptedToken(bytes32,uint32)": FunctionFragment;
    "getTokenId(address)": FunctionFragment;
    "removeAssetId((uint32,bytes32),address,address)": FunctionFragment;
    "removeAssetId(bytes32,address,address)": FunctionFragment;
    "representationToCanonical(address)": FunctionFragment;
    "setupAsset((uint32,bytes32),uint8,string,string,address,address,uint256)": FunctionFragment;
    "setupAssetWithDeployedRepresentation((uint32,bytes32),address,address,address)": FunctionFragment;
    "updateDetails((uint32,bytes32),string,string)": FunctionFragment;
    "updateLiquidityCap((uint32,bytes32),uint256)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "addStableSwapPool"
      | "adoptedToCanonical"
      | "adoptedToLocalExternalPools((uint32,bytes32))"
      | "adoptedToLocalExternalPools(bytes32)"
      | "approvedAssets(bytes32)"
      | "approvedAssets((uint32,bytes32))"
      | "canonicalToAdopted(bytes32)"
      | "canonicalToAdopted((uint32,bytes32))"
      | "canonicalToRepresentation(bytes32)"
      | "canonicalToRepresentation((uint32,bytes32))"
      | "getCustodiedAmount"
      | "getLocalAndAdoptedToken"
      | "getTokenId"
      | "removeAssetId((uint32,bytes32),address,address)"
      | "removeAssetId(bytes32,address,address)"
      | "representationToCanonical"
      | "setupAsset"
      | "setupAssetWithDeployedRepresentation"
      | "updateDetails"
      | "updateLiquidityCap"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "addStableSwapPool",
    values: [TokenIdStruct, PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "adoptedToCanonical",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "adoptedToLocalExternalPools((uint32,bytes32))",
    values: [TokenIdStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "adoptedToLocalExternalPools(bytes32)",
    values: [PromiseOrValue<BytesLike>]
  ): string;
  encodeFunctionData(
    functionFragment: "approvedAssets(bytes32)",
    values: [PromiseOrValue<BytesLike>]
  ): string;
  encodeFunctionData(
    functionFragment: "approvedAssets((uint32,bytes32))",
    values: [TokenIdStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "canonicalToAdopted(bytes32)",
    values: [PromiseOrValue<BytesLike>]
  ): string;
  encodeFunctionData(
    functionFragment: "canonicalToAdopted((uint32,bytes32))",
    values: [TokenIdStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "canonicalToRepresentation(bytes32)",
    values: [PromiseOrValue<BytesLike>]
  ): string;
  encodeFunctionData(
    functionFragment: "canonicalToRepresentation((uint32,bytes32))",
    values: [TokenIdStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "getCustodiedAmount",
    values: [PromiseOrValue<BytesLike>]
  ): string;
  encodeFunctionData(
    functionFragment: "getLocalAndAdoptedToken",
    values: [PromiseOrValue<BytesLike>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getTokenId",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "removeAssetId((uint32,bytes32),address,address)",
    values: [TokenIdStruct, PromiseOrValue<string>, PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "removeAssetId(bytes32,address,address)",
    values: [
      PromiseOrValue<BytesLike>,
      PromiseOrValue<string>,
      PromiseOrValue<string>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "representationToCanonical",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "setupAsset",
    values: [
      TokenIdStruct,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "setupAssetWithDeployedRepresentation",
    values: [
      TokenIdStruct,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "updateDetails",
    values: [TokenIdStruct, PromiseOrValue<string>, PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "updateLiquidityCap",
    values: [TokenIdStruct, PromiseOrValue<BigNumberish>]
  ): string;

  decodeFunctionResult(
    functionFragment: "addStableSwapPool",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "adoptedToCanonical",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "adoptedToLocalExternalPools((uint32,bytes32))",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "adoptedToLocalExternalPools(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "approvedAssets(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "approvedAssets((uint32,bytes32))",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "canonicalToAdopted(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "canonicalToAdopted((uint32,bytes32))",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "canonicalToRepresentation(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "canonicalToRepresentation((uint32,bytes32))",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCustodiedAmount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getLocalAndAdoptedToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getTokenId", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "removeAssetId((uint32,bytes32),address,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeAssetId(bytes32,address,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "representationToCanonical",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "setupAsset", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setupAssetWithDeployedRepresentation",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateDetails",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateLiquidityCap",
    data: BytesLike
  ): Result;

  events: {
    "AssetAdded(bytes32,bytes32,uint32,address,address,address)": EventFragment;
    "AssetRemoved(bytes32,address)": EventFragment;
    "LiquidityCapUpdated(bytes32,bytes32,uint32,uint256,address)": EventFragment;
    "StableSwapAdded(bytes32,bytes32,uint32,address,address)": EventFragment;
    "TokenDeployed(uint32,bytes32,address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "AssetAdded"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "AssetRemoved"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "LiquidityCapUpdated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "StableSwapAdded"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TokenDeployed"): EventFragment;
}

export interface AssetAddedEventObject {
  key: string;
  canonicalId: string;
  domain: number;
  adoptedAsset: string;
  localAsset: string;
  caller: string;
}
export type AssetAddedEvent = TypedEvent<
  [string, string, number, string, string, string],
  AssetAddedEventObject
>;

export type AssetAddedEventFilter = TypedEventFilter<AssetAddedEvent>;

export interface AssetRemovedEventObject {
  key: string;
  caller: string;
}
export type AssetRemovedEvent = TypedEvent<
  [string, string],
  AssetRemovedEventObject
>;

export type AssetRemovedEventFilter = TypedEventFilter<AssetRemovedEvent>;

export interface LiquidityCapUpdatedEventObject {
  key: string;
  canonicalId: string;
  domain: number;
  cap: BigNumber;
  caller: string;
}
export type LiquidityCapUpdatedEvent = TypedEvent<
  [string, string, number, BigNumber, string],
  LiquidityCapUpdatedEventObject
>;

export type LiquidityCapUpdatedEventFilter =
  TypedEventFilter<LiquidityCapUpdatedEvent>;

export interface StableSwapAddedEventObject {
  key: string;
  canonicalId: string;
  domain: number;
  swapPool: string;
  caller: string;
}
export type StableSwapAddedEvent = TypedEvent<
  [string, string, number, string, string],
  StableSwapAddedEventObject
>;

export type StableSwapAddedEventFilter = TypedEventFilter<StableSwapAddedEvent>;

export interface TokenDeployedEventObject {
  domain: number;
  id: string;
  representation: string;
}
export type TokenDeployedEvent = TypedEvent<
  [number, string, string],
  TokenDeployedEventObject
>;

export type TokenDeployedEventFilter = TypedEventFilter<TokenDeployedEvent>;

export interface TokenFacet extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: TokenFacetInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    addStableSwapPool(
      _canonical: TokenIdStruct,
      _stableSwapPool: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    adoptedToCanonical(
      _adopted: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[TokenIdStructOutput]>;

    "adoptedToLocalExternalPools((uint32,bytes32))"(
      _canonical: TokenIdStruct,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "adoptedToLocalExternalPools(bytes32)"(
      _key: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "approvedAssets(bytes32)"(
      _key: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "approvedAssets((uint32,bytes32))"(
      _canonical: TokenIdStruct,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "canonicalToAdopted(bytes32)"(
      _key: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "canonicalToAdopted((uint32,bytes32))"(
      _canonical: TokenIdStruct,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "canonicalToRepresentation(bytes32)"(
      _key: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "canonicalToRepresentation((uint32,bytes32))"(
      _canonical: TokenIdStruct,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getCustodiedAmount(
      _key: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getLocalAndAdoptedToken(
      _id: PromiseOrValue<BytesLike>,
      _domain: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string, string]>;

    getTokenId(
      _candidate: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[TokenIdStructOutput]>;

    "removeAssetId((uint32,bytes32),address,address)"(
      _canonical: TokenIdStruct,
      _adoptedAssetId: PromiseOrValue<string>,
      _representation: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "removeAssetId(bytes32,address,address)"(
      _key: PromiseOrValue<BytesLike>,
      _adoptedAssetId: PromiseOrValue<string>,
      _representation: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    representationToCanonical(
      _representation: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[TokenIdStructOutput]>;

    setupAsset(
      _canonical: TokenIdStruct,
      _canonicalDecimals: PromiseOrValue<BigNumberish>,
      _representationName: PromiseOrValue<string>,
      _representationSymbol: PromiseOrValue<string>,
      _adoptedAssetId: PromiseOrValue<string>,
      _stableSwapPool: PromiseOrValue<string>,
      _cap: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setupAssetWithDeployedRepresentation(
      _canonical: TokenIdStruct,
      _representation: PromiseOrValue<string>,
      _adoptedAssetId: PromiseOrValue<string>,
      _stableSwapPool: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    updateDetails(
      _canonical: TokenIdStruct,
      _name: PromiseOrValue<string>,
      _symbol: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    updateLiquidityCap(
      _canonical: TokenIdStruct,
      _updated: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;
  };

  addStableSwapPool(
    _canonical: TokenIdStruct,
    _stableSwapPool: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  adoptedToCanonical(
    _adopted: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<TokenIdStructOutput>;

  "adoptedToLocalExternalPools((uint32,bytes32))"(
    _canonical: TokenIdStruct,
    overrides?: CallOverrides
  ): Promise<string>;

  "adoptedToLocalExternalPools(bytes32)"(
    _key: PromiseOrValue<BytesLike>,
    overrides?: CallOverrides
  ): Promise<string>;

  "approvedAssets(bytes32)"(
    _key: PromiseOrValue<BytesLike>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "approvedAssets((uint32,bytes32))"(
    _canonical: TokenIdStruct,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "canonicalToAdopted(bytes32)"(
    _key: PromiseOrValue<BytesLike>,
    overrides?: CallOverrides
  ): Promise<string>;

  "canonicalToAdopted((uint32,bytes32))"(
    _canonical: TokenIdStruct,
    overrides?: CallOverrides
  ): Promise<string>;

  "canonicalToRepresentation(bytes32)"(
    _key: PromiseOrValue<BytesLike>,
    overrides?: CallOverrides
  ): Promise<string>;

  "canonicalToRepresentation((uint32,bytes32))"(
    _canonical: TokenIdStruct,
    overrides?: CallOverrides
  ): Promise<string>;

  getCustodiedAmount(
    _key: PromiseOrValue<BytesLike>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getLocalAndAdoptedToken(
    _id: PromiseOrValue<BytesLike>,
    _domain: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<[string, string]>;

  getTokenId(
    _candidate: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<TokenIdStructOutput>;

  "removeAssetId((uint32,bytes32),address,address)"(
    _canonical: TokenIdStruct,
    _adoptedAssetId: PromiseOrValue<string>,
    _representation: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "removeAssetId(bytes32,address,address)"(
    _key: PromiseOrValue<BytesLike>,
    _adoptedAssetId: PromiseOrValue<string>,
    _representation: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  representationToCanonical(
    _representation: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<TokenIdStructOutput>;

  setupAsset(
    _canonical: TokenIdStruct,
    _canonicalDecimals: PromiseOrValue<BigNumberish>,
    _representationName: PromiseOrValue<string>,
    _representationSymbol: PromiseOrValue<string>,
    _adoptedAssetId: PromiseOrValue<string>,
    _stableSwapPool: PromiseOrValue<string>,
    _cap: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setupAssetWithDeployedRepresentation(
    _canonical: TokenIdStruct,
    _representation: PromiseOrValue<string>,
    _adoptedAssetId: PromiseOrValue<string>,
    _stableSwapPool: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  updateDetails(
    _canonical: TokenIdStruct,
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  updateLiquidityCap(
    _canonical: TokenIdStruct,
    _updated: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    addStableSwapPool(
      _canonical: TokenIdStruct,
      _stableSwapPool: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    adoptedToCanonical(
      _adopted: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<TokenIdStructOutput>;

    "adoptedToLocalExternalPools((uint32,bytes32))"(
      _canonical: TokenIdStruct,
      overrides?: CallOverrides
    ): Promise<string>;

    "adoptedToLocalExternalPools(bytes32)"(
      _key: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<string>;

    "approvedAssets(bytes32)"(
      _key: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "approvedAssets((uint32,bytes32))"(
      _canonical: TokenIdStruct,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "canonicalToAdopted(bytes32)"(
      _key: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<string>;

    "canonicalToAdopted((uint32,bytes32))"(
      _canonical: TokenIdStruct,
      overrides?: CallOverrides
    ): Promise<string>;

    "canonicalToRepresentation(bytes32)"(
      _key: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<string>;

    "canonicalToRepresentation((uint32,bytes32))"(
      _canonical: TokenIdStruct,
      overrides?: CallOverrides
    ): Promise<string>;

    getCustodiedAmount(
      _key: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getLocalAndAdoptedToken(
      _id: PromiseOrValue<BytesLike>,
      _domain: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string, string]>;

    getTokenId(
      _candidate: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<TokenIdStructOutput>;

    "removeAssetId((uint32,bytes32),address,address)"(
      _canonical: TokenIdStruct,
      _adoptedAssetId: PromiseOrValue<string>,
      _representation: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    "removeAssetId(bytes32,address,address)"(
      _key: PromiseOrValue<BytesLike>,
      _adoptedAssetId: PromiseOrValue<string>,
      _representation: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    representationToCanonical(
      _representation: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<TokenIdStructOutput>;

    setupAsset(
      _canonical: TokenIdStruct,
      _canonicalDecimals: PromiseOrValue<BigNumberish>,
      _representationName: PromiseOrValue<string>,
      _representationSymbol: PromiseOrValue<string>,
      _adoptedAssetId: PromiseOrValue<string>,
      _stableSwapPool: PromiseOrValue<string>,
      _cap: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;

    setupAssetWithDeployedRepresentation(
      _canonical: TokenIdStruct,
      _representation: PromiseOrValue<string>,
      _adoptedAssetId: PromiseOrValue<string>,
      _stableSwapPool: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<string>;

    updateDetails(
      _canonical: TokenIdStruct,
      _name: PromiseOrValue<string>,
      _symbol: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    updateLiquidityCap(
      _canonical: TokenIdStruct,
      _updated: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "AssetAdded(bytes32,bytes32,uint32,address,address,address)"(
      key?: PromiseOrValue<BytesLike> | null,
      canonicalId?: PromiseOrValue<BytesLike> | null,
      domain?: PromiseOrValue<BigNumberish> | null,
      adoptedAsset?: null,
      localAsset?: null,
      caller?: null
    ): AssetAddedEventFilter;
    AssetAdded(
      key?: PromiseOrValue<BytesLike> | null,
      canonicalId?: PromiseOrValue<BytesLike> | null,
      domain?: PromiseOrValue<BigNumberish> | null,
      adoptedAsset?: null,
      localAsset?: null,
      caller?: null
    ): AssetAddedEventFilter;

    "AssetRemoved(bytes32,address)"(
      key?: PromiseOrValue<BytesLike> | null,
      caller?: null
    ): AssetRemovedEventFilter;
    AssetRemoved(
      key?: PromiseOrValue<BytesLike> | null,
      caller?: null
    ): AssetRemovedEventFilter;

    "LiquidityCapUpdated(bytes32,bytes32,uint32,uint256,address)"(
      key?: PromiseOrValue<BytesLike> | null,
      canonicalId?: PromiseOrValue<BytesLike> | null,
      domain?: PromiseOrValue<BigNumberish> | null,
      cap?: null,
      caller?: null
    ): LiquidityCapUpdatedEventFilter;
    LiquidityCapUpdated(
      key?: PromiseOrValue<BytesLike> | null,
      canonicalId?: PromiseOrValue<BytesLike> | null,
      domain?: PromiseOrValue<BigNumberish> | null,
      cap?: null,
      caller?: null
    ): LiquidityCapUpdatedEventFilter;

    "StableSwapAdded(bytes32,bytes32,uint32,address,address)"(
      key?: PromiseOrValue<BytesLike> | null,
      canonicalId?: PromiseOrValue<BytesLike> | null,
      domain?: PromiseOrValue<BigNumberish> | null,
      swapPool?: null,
      caller?: null
    ): StableSwapAddedEventFilter;
    StableSwapAdded(
      key?: PromiseOrValue<BytesLike> | null,
      canonicalId?: PromiseOrValue<BytesLike> | null,
      domain?: PromiseOrValue<BigNumberish> | null,
      swapPool?: null,
      caller?: null
    ): StableSwapAddedEventFilter;

    "TokenDeployed(uint32,bytes32,address)"(
      domain?: PromiseOrValue<BigNumberish> | null,
      id?: PromiseOrValue<BytesLike> | null,
      representation?: PromiseOrValue<string> | null
    ): TokenDeployedEventFilter;
    TokenDeployed(
      domain?: PromiseOrValue<BigNumberish> | null,
      id?: PromiseOrValue<BytesLike> | null,
      representation?: PromiseOrValue<string> | null
    ): TokenDeployedEventFilter;
  };

  estimateGas: {
    addStableSwapPool(
      _canonical: TokenIdStruct,
      _stableSwapPool: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    adoptedToCanonical(
      _adopted: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "adoptedToLocalExternalPools((uint32,bytes32))"(
      _canonical: TokenIdStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "adoptedToLocalExternalPools(bytes32)"(
      _key: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "approvedAssets(bytes32)"(
      _key: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "approvedAssets((uint32,bytes32))"(
      _canonical: TokenIdStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "canonicalToAdopted(bytes32)"(
      _key: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "canonicalToAdopted((uint32,bytes32))"(
      _canonical: TokenIdStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "canonicalToRepresentation(bytes32)"(
      _key: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "canonicalToRepresentation((uint32,bytes32))"(
      _canonical: TokenIdStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getCustodiedAmount(
      _key: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getLocalAndAdoptedToken(
      _id: PromiseOrValue<BytesLike>,
      _domain: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTokenId(
      _candidate: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "removeAssetId((uint32,bytes32),address,address)"(
      _canonical: TokenIdStruct,
      _adoptedAssetId: PromiseOrValue<string>,
      _representation: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "removeAssetId(bytes32,address,address)"(
      _key: PromiseOrValue<BytesLike>,
      _adoptedAssetId: PromiseOrValue<string>,
      _representation: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    representationToCanonical(
      _representation: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setupAsset(
      _canonical: TokenIdStruct,
      _canonicalDecimals: PromiseOrValue<BigNumberish>,
      _representationName: PromiseOrValue<string>,
      _representationSymbol: PromiseOrValue<string>,
      _adoptedAssetId: PromiseOrValue<string>,
      _stableSwapPool: PromiseOrValue<string>,
      _cap: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setupAssetWithDeployedRepresentation(
      _canonical: TokenIdStruct,
      _representation: PromiseOrValue<string>,
      _adoptedAssetId: PromiseOrValue<string>,
      _stableSwapPool: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    updateDetails(
      _canonical: TokenIdStruct,
      _name: PromiseOrValue<string>,
      _symbol: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    updateLiquidityCap(
      _canonical: TokenIdStruct,
      _updated: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    addStableSwapPool(
      _canonical: TokenIdStruct,
      _stableSwapPool: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    adoptedToCanonical(
      _adopted: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "adoptedToLocalExternalPools((uint32,bytes32))"(
      _canonical: TokenIdStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "adoptedToLocalExternalPools(bytes32)"(
      _key: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "approvedAssets(bytes32)"(
      _key: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "approvedAssets((uint32,bytes32))"(
      _canonical: TokenIdStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "canonicalToAdopted(bytes32)"(
      _key: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "canonicalToAdopted((uint32,bytes32))"(
      _canonical: TokenIdStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "canonicalToRepresentation(bytes32)"(
      _key: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "canonicalToRepresentation((uint32,bytes32))"(
      _canonical: TokenIdStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getCustodiedAmount(
      _key: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getLocalAndAdoptedToken(
      _id: PromiseOrValue<BytesLike>,
      _domain: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getTokenId(
      _candidate: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "removeAssetId((uint32,bytes32),address,address)"(
      _canonical: TokenIdStruct,
      _adoptedAssetId: PromiseOrValue<string>,
      _representation: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "removeAssetId(bytes32,address,address)"(
      _key: PromiseOrValue<BytesLike>,
      _adoptedAssetId: PromiseOrValue<string>,
      _representation: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    representationToCanonical(
      _representation: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setupAsset(
      _canonical: TokenIdStruct,
      _canonicalDecimals: PromiseOrValue<BigNumberish>,
      _representationName: PromiseOrValue<string>,
      _representationSymbol: PromiseOrValue<string>,
      _adoptedAssetId: PromiseOrValue<string>,
      _stableSwapPool: PromiseOrValue<string>,
      _cap: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setupAssetWithDeployedRepresentation(
      _canonical: TokenIdStruct,
      _representation: PromiseOrValue<string>,
      _adoptedAssetId: PromiseOrValue<string>,
      _stableSwapPool: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    updateDetails(
      _canonical: TokenIdStruct,
      _name: PromiseOrValue<string>,
      _symbol: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    updateLiquidityCap(
      _canonical: TokenIdStruct,
      _updated: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;
  };
}
