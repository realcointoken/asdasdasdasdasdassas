[
  "error AssetLogic__handleOutgoingAsset_notNative()",
  "error BaseConnextFacet__getAdoptedAsset_assetNotFound()",
  "error BaseConnextFacet__getApprovedCanonicalId_notAllowlisted()",
  "error BaseConnextFacet__nonReentrant_reentrantCall()",
  "error BaseConnextFacet__nonXCallReentrant_reentrantCall()",
  "error BaseConnextFacet__onlyOwnerOrAdmin_notOwnerOrAdmin()",
  "error BaseConnextFacet__onlyOwnerOrRouter_notOwnerOrRouter()",
  "error BaseConnextFacet__onlyOwnerOrWatcher_notOwnerOrWatcher()",
  "error BaseConnextFacet__onlyOwner_notOwner()",
  "error BaseConnextFacet__onlyProposed_notProposedOwner()",
  "error BaseConnextFacet__whenNotPaused_paused()",
  "error SwapAdminFacet__disableSwap_alreadyDisabled()",
  "error SwapAdminFacet__disableSwap_notInitialized()",
  "error SwapAdminFacet__initializeSwap_aExceedMax()",
  "error SwapAdminFacet__initializeSwap_adminFeeExceedMax()",
  "error SwapAdminFacet__initializeSwap_alreadyInitialized()",
  "error SwapAdminFacet__initializeSwap_decimalsMismatch()",
  "error SwapAdminFacet__initializeSwap_duplicateTokens()",
  "error SwapAdminFacet__initializeSwap_failedInitLpTokenClone()",
  "error SwapAdminFacet__initializeSwap_feeExceedMax()",
  "error SwapAdminFacet__initializeSwap_invalidPooledTokens()",
  "error SwapAdminFacet__initializeSwap_tokenDecimalsExceedMax()",
  "error SwapAdminFacet__initializeSwap_zeroTokenAddress()",
  "error SwapAdminFacet__removeSwap_delayNotElapsed()",
  "error SwapAdminFacet__removeSwap_notDisabledPool()",
  "error SwapAdminFacet__removeSwap_notInitialized()",
  "error SwapAdminFacet__updateLpTokenTarget_invalidNewAddress()",
  "event AdminFeesSet(bytes32 indexed key, uint256 newAdminFee, address caller)",
  "event AdminFeesWithdrawn(bytes32 indexed key, address caller)",
  "event LPTokenTargetUpdated(address oldAddress, address newAddress, address caller)",
  "event RampAStarted(bytes32 indexed key, uint256 futureA, uint256 futureTime, address caller)",
  "event RampAStopped(bytes32 indexed key, address caller)",
  "event SwapDisabled(bytes32 indexed key, address caller)",
  "event SwapFeesSet(bytes32 indexed key, uint256 newSwapFee, address caller)",
  "event SwapInitialized(bytes32 indexed key, tuple(bytes32 key, uint256 initialA, uint256 futureA, uint256 initialATime, uint256 futureATime, uint256 swapFee, uint256 adminFee, address lpToken, address[] pooledTokens, uint256[] tokenPrecisionMultipliers, uint256[] balances, uint256[] adminFees, bool disabled, uint256 removeTime) swap, address caller)",
  "event SwapRemoved(bytes32 indexed key, address caller)",
  "function disableSwap(bytes32 _key)",
  "function initializeSwap(bytes32 _key, address[] _pooledTokens, uint8[] decimals, string lpTokenName, string lpTokenSymbol, uint256 _a, uint256 _fee, uint256 _adminFee)",
  "function isDisabled(bytes32 key) view returns (bool)",
  "function lpTokenTargetAddress() view returns (address)",
  "function rampA(bytes32 key, uint256 futureA, uint256 futureTime)",
  "function removeSwap(bytes32 _key)",
  "function setSwapAdminFee(bytes32 key, uint256 newAdminFee)",
  "function setSwapFee(bytes32 key, uint256 newSwapFee)",
  "function stopRampA(bytes32 key)",
  "function updateLpTokenTarget(address newAddress)",
  "function withdrawSwapAdminFees(bytes32 key)"
]
