# ROOT MANAGER
type RootAggregated @entity {
  id: ID! # "RootAggregated"
  domain: BigInt!
  receivedRoot: Bytes!
  index: BigInt!
}

type RootPropagated @entity {
  id: ID! # "RootPropagated"
  aggregate: Bytes!
  domainsHash: Bytes!
  count: BigInt!
}

type AggregatedMessageRoot @entity {
  id: ID! # Same as index.
  index: BigInt! # Index in the aggregate tree.
  receivedRoot: Bytes! # The actual leaf hash; the 32-byte message root.
  domain: BigInt
}

type RootManagerMeta @entity {
  id: ID! # "ROOT_MANAGER_META_ID"
  domains: [BigInt!]
  connectors: [Bytes!]
}

# POLYGON
type PolygonConnectorMeta @entity {
  id: ID! # "PolygonConnectorMeta"
  spokeDomain: BigInt!
  hubDomain: BigInt!

  amb: Bytes!
  rootManager: Bytes!
  mirrorConnector: Bytes!
}

# OPTIMISM
type OptimismConnectorMeta @entity {
  id: ID! # "OptimismConnectorMeta"
  spokeDomain: BigInt!
  hubDomain: BigInt!

  amb: Bytes!
  rootManager: Bytes!
  mirrorConnector: Bytes!
}

# BNB
type BnbConnectorMeta @entity {
  id: ID! # "BnbConnectorMeta"
  spokeDomain: BigInt!
  hubDomain: BigInt!

  amb: Bytes!
  rootManager: Bytes!
  mirrorConnector: Bytes!
}

# ARBITRUM
type ArbitrumConnectorMeta @entity {
  id: ID! # "ArbitrumConnectorMeta"
  spokeDomain: BigInt!
  hubDomain: BigInt!

  amb: Bytes!
  rootManager: Bytes!
  mirrorConnector: Bytes!
}

# GNOSIS
type GnosisConnectorMeta @entity {
  id: ID! # "GnosisConnectorMeta"
  spokeDomain: BigInt!
  hubDomain: BigInt!

  amb: Bytes!
  rootManager: Bytes!
  mirrorConnector: Bytes!
}

# ZKSYNC
type ZkSyncConnectorMeta @entity {
  id: ID! # "ZkSyncConnectorMeta"
  spokeDomain: BigInt!
  hubDomain: BigInt!

  amb: Bytes!
  rootManager: Bytes!
  mirrorConnector: Bytes!
}

# HUB CONNECTOR
type RootMessageProcessed @entity {
  id: ID!

  spokeDomain: BigInt!
  hubDomain: BigInt!
  root: Bytes

  # MessageProcessed Transaction
  caller: Bytes
  transactionHash: Bytes
  timestamp: BigInt
  gasPrice: BigInt
  gasLimit: BigInt
  blockNumber: BigInt
}
